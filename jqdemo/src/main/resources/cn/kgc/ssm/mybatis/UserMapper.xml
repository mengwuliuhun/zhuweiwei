<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.kgc.ssm.mybatis.UserMapper">
    <resultMap id="BaseResultMap" type="cn.kgc.ssm.entity.User">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="phone" jdbcType="CHAR" property="phone"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="image" jdbcType="VARCHAR" property="image"/>
        <result column="state" jdbcType="INTEGER" property="state"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, phone, name, password, image, state
  </sql>
    <sql id="base_select_sql">
        select
        <include refid="Base_Column_List"/>
        from user
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from user
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="cn.kgc.ssm.entity.User">
        insert into user (id, phone, name,
        password, image, state
        )
        values (#{id,jdbcType=INTEGER}, #{phone,jdbcType=CHAR}, #{name,jdbcType=VARCHAR},
        #{password,jdbcType=VARCHAR}, #{image,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}
        )
    </insert>
    <insert id="insertSelective" parameterType="cn.kgc.ssm.entity.User" keyProperty="id">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="image != null">
                image,
            </if>
            <if test="state != null">
                state,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=CHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="image != null">
                #{image,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                #{state,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="cn.kgc.ssm.entity.User">
        update user
        <set>
            <if test="phone != null">
                phone = #{phone,jdbcType=CHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="image != null">
                image = #{image,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.kgc.ssm.entity.User">
        update user
        set phone = #{phone,jdbcType=CHAR},
        name = #{name,jdbcType=VARCHAR},
        password = #{password,jdbcType=VARCHAR},
        image = #{image,jdbcType=VARCHAR},
        state = #{state,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectByNameOrPhone" resultMap="BaseResultMap">
        <include refid="base_select_sql"/>
        <trim prefix="where" prefixOverrides="or|and">
            <if test="id neq null">id!=#{id}</if>
            <if test="name neq null ">and name=#{name}</if>
            <if test="phone neq null ">or phone=#{phone}</if>
        </trim>
    </select>
    <!--在用户没被禁言的情况下,通过(名字,电话)和密码查询用户对象-->
    <select id="selectByNameAndPasswordOrPhone" parameterType="cn.kgc.ssm.entity.User" resultType="cn.kgc.ssm.entity.User">
        <include refid="base_select_sql"/>
        where (name=#{name} or phone=#{name}) and password=#{password} and state >0
    </select>
    <!--<select id="selectByName" resultMap="BaseResultMap">-->
        <!--<include refid="base_select_sql"/>-->
        <!--<trim prefix="where" prefixOverrides="and">-->
            <!--<if test="name neq null">name=#{name}</if>-->
            <!--<if test="id neq null ">and id!=#{id}</if>-->
        <!--</trim>-->
    <!--</select>-->
    <!--<select id="selectByPhone" resultMap="BaseResultMap">-->
        <!--<include refid="base_select_sql"/>-->
        <!--<trim prefix="where" prefixOverrides="and">-->
            <!--<if test="phone neq null">name=#{name}</if>-->
            <!--<if test="id neq null ">and id!=#{id}</if>-->
        <!--</trim>-->
    <!--</select>-->
    <!--通过姓名和电话模糊查询得到用户集合-->
    <select id="selectUserListLikeByNameAndPhone" parameterType="String" resultMap="BaseResultMap">
        <include refid="base_select_sql"/>
        <trim prefix="where" prefixOverrides="and">
            <if test="name neq null">name rlike #{name}</if>
            <if test="phone neq null ">and phone rlike #{phone}</if>
        </trim>
    </select>
    <select id="selectUserListByName" resultMap="BaseResultMap">
        <include refid="base_select_sql"/>
        <trim prefix="where" prefixOverrides="or|and">
            <if test="id neq null">id!=#{id}</if>
            <if test="name neq null">and name=#{name}</if>
        </trim>
    </select>
    <select id="selectUserListByPhone" resultMap="BaseResultMap">
        <include refid="base_select_sql"/>
        <trim prefix="where" prefixOverrides="or|and">
            <if test="id neq null">id!=#{id}</if>
            <if test="phone neq null ">and phone=#{phone}</if>
        </trim>
    </select>
    <!--改变用户权限-->
    <update id="updateUsersState">
        update user set state=#{newState} where id=#{id} and state=#{oldState}
    </update>
</mapper>